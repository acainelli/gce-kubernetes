apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cloud-controller-manager
  namespace: kube-system
  labels:
    tier: control-plane
    k8s-app: cloud-controller-manager
spec:
  selector:
    matchLabels:
     k8s-app: cloud-controller-manager
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        tier: control-plane
        k8s-app: cloud-controller-manager
    spec:
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      tolerations:
      - effect: NoSchedule
        key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsUser: 65521
        runAsNonRoot: true
      priorityClassName: system-node-critical
      hostNetwork: true
      serviceAccountName: cloud-controller-manager
      containers:
        - name: cloud-controller-manager
          image: "{{ .Values.controller.ccm_image_name }}:{{ .Values.controller.ccm_image_tag }}"
          resources:
            requests:
              cpu: 50m
          command:
            - /bin/gcp-cloud-controller-manager
          args:
            - --bind-address=127.0.0.1
            - --cloud-provider=gce
            - --use-service-account-credentials=true
            - --configure-cloud-routes=false
            - --controllers=*,-nodeipam
            - --cloud-config=/etc/config/cloud-config
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              port: 10258
              path: /healthz
              scheme: HTTPS
            initialDelaySeconds: 15
            timeoutSeconds: 15
          volumeMounts:
            - mountPath: /etc/config
              name: cloud-config-volume
              readOnly: true
      volumes:
      - name: cloud-config-volume
        secret:
          secretName: cloud-config
